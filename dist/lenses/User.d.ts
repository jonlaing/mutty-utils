import { lens } from "shonad/control";
import { maybe } from "shonad/data";
import { AdditionalUserInfo, MultiFactor, ProviderData, STSTokenManager, User, UserUser } from "../types";
export declare const additionalUserInfo: lens.Lens<Record<string, AdditionalUserInfo>, maybe.Maybe<AdditionalUserInfo>>;
export declare const credential: lens.Lens<Record<string, any>, maybe.Maybe<any>>;
export declare const operationType: lens.Lens<Record<string, string>, maybe.Maybe<string>>;
export declare const userRecord: lens.Lens<Record<string, UserUser>, maybe.Maybe<UserUser>>;
export declare const isNewUser: lens.Lens<User, maybe.Maybe<boolean>>;
export declare const providerID: lens.Lens<User, maybe.Maybe<string>>;
export declare const multiFactor: lens.Lens<User, maybe.Maybe<MultiFactor>>;
export declare const enrolledFactors: lens.Lens<User, maybe.Maybe<string[]>>;
export declare const providerData: lens.Lens<User, maybe.Maybe<ProviderData[]>>;
export declare const firstProviderData: lens.Lens<User, maybe.Maybe<ProviderData>>;
export declare const stsTokenManager: lens.Lens<User, maybe.Maybe<STSTokenManager>>;
export declare const appName: lens.Lens<User, maybe.Maybe<string>>;
export declare const authDomain: lens.Lens<User, maybe.Maybe<string>>;
export declare const createdAt: lens.Lens<User, maybe.Maybe<string>>;
export declare const displayName: lens.Lens<User, maybe.Maybe<string>>;
export declare const email: lens.Lens<User, maybe.Maybe<string>>;
export declare const emailVerified: lens.Lens<User, maybe.Maybe<boolean>>;
export declare const isAnonymous: lens.Lens<User, maybe.Maybe<boolean>>;
export declare const lastLoginAt: lens.Lens<User, maybe.Maybe<string>>;
export declare const phoneNumber: lens.Lens<User, maybe.Maybe<string>>;
export declare const photoURL: lens.Lens<User, maybe.Maybe<string>>;
export declare const redirectEventId: lens.Lens<User, maybe.Maybe<any>>;
export declare const tenantID: lens.Lens<User, maybe.Maybe<string>>;
export declare const uid: lens.Lens<User, maybe.Maybe<string>>;
